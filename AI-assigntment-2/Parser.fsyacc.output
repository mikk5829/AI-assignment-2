        Output file describing compiled parser placed in Parser.fs and Parser.fsi
------------------------
states = 
state 0:  items:    _startcExpression ->  . cExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (explicit left 9986):   shift 26
    action 'IF' (explicit left 9986):   shift 28
    action 'FI' (noprec):   error
    action 'DO' (explicit left 9986):   shift 30
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto cExpression: 1
    goto aExpression: 15
state 1:  items:    _startcExpression -> cExpression . 
    cExpression -> cExpression . 'COMMA' cExpression
    cExpression -> cExpression . 'SEQUENCE' cExpression
  actions:    action 'NOT' (noprec):   accept
    action 'BIIMPLICATION' (noprec):   accept
    action 'IMPLICATION' (noprec):   accept
    action 'COMMA' (explicit left 9985):   shift 21
    action 'MULTIPLY' (noprec):   accept
    action 'DIVIDE' (noprec):   accept
    action 'ADDITION' (noprec):   accept
    action 'SUBTRACT' (noprec):   accept
    action 'ZERO' (noprec):   accept
    action 'POWER' (noprec):   accept
    action 'TRUE' (noprec):   accept
    action 'FALSE' (noprec):   accept
    action 'SHORTAND' (noprec):   accept
    action 'SHORTOR' (noprec):   accept
    action 'AND' (noprec):   accept
    action 'OR' (noprec):   accept
    action 'NEG' (noprec):   accept
    action 'EQUAL' (noprec):   accept
    action 'NEGEQUAL' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'LTE' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'GTE' (noprec):   accept
    action 'LPAR' (noprec):   accept
    action 'RPAR' (noprec):   accept
    action 'LCUR' (noprec):   accept
    action 'RCUR' (noprec):   accept
    action 'LBRA' (noprec):   accept
    action 'RBRA' (noprec):   accept
    action 'ASSIGN' (noprec):   accept
    action 'ASSIGNARRAY' (noprec):   accept
    action 'SEQUENCE' (explicit right 9988):   shift 27
    action 'SKIP' (noprec):   accept
    action 'IF' (noprec):   accept
    action 'FI' (noprec):   accept
    action 'DO' (noprec):   accept
    action 'OD' (noprec):   accept
    action 'CONDITION' (noprec):   accept
    action 'ELSE' (noprec):   accept
    action 'EOF' (noprec):   accept
    action 'NUM' (noprec):   accept
    action 'VAR' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action: <none>  gotos:state 2:  items:    dExpression -> bExpression . 
    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (noprec):   reduce dExpression --> bExpression
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (noprec):   reduce dExpression --> bExpression
    action 'COMMA' (noprec):   reduce dExpression --> bExpression
    action 'MULTIPLY' (noprec):   reduce dExpression --> bExpression
    action 'DIVIDE' (noprec):   reduce dExpression --> bExpression
    action 'ADDITION' (noprec):   reduce dExpression --> bExpression
    action 'SUBTRACT' (noprec):   reduce dExpression --> bExpression
    action 'ZERO' (noprec):   reduce dExpression --> bExpression
    action 'POWER' (noprec):   reduce dExpression --> bExpression
    action 'TRUE' (noprec):   reduce dExpression --> bExpression
    action 'FALSE' (noprec):   reduce dExpression --> bExpression
    action 'SHORTAND' (explicit left 9994):   shift 75
    action 'SHORTOR' (explicit left 9993):   shift 76
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (noprec):   reduce dExpression --> bExpression
    action 'EQUAL' (noprec):   reduce dExpression --> bExpression
    action 'NEGEQUAL' (noprec):   reduce dExpression --> bExpression
    action 'LT' (noprec):   reduce dExpression --> bExpression
    action 'LTE' (noprec):   reduce dExpression --> bExpression
    action 'GT' (noprec):   reduce dExpression --> bExpression
    action 'GTE' (noprec):   reduce dExpression --> bExpression
    action 'LPAR' (noprec):   reduce dExpression --> bExpression
    action 'RPAR' (noprec):   reduce dExpression --> bExpression
    action 'LCUR' (noprec):   reduce dExpression --> bExpression
    action 'RCUR' (noprec):   reduce dExpression --> bExpression
    action 'LBRA' (noprec):   reduce dExpression --> bExpression
    action 'RBRA' (noprec):   reduce dExpression --> bExpression
    action 'ASSIGN' (noprec):   reduce dExpression --> bExpression
    action 'ASSIGNARRAY' (noprec):   reduce dExpression --> bExpression
    action 'SEQUENCE' (noprec):   reduce dExpression --> bExpression
    action 'SKIP' (noprec):   reduce dExpression --> bExpression
    action 'IF' (noprec):   reduce dExpression --> bExpression
    action 'FI' (noprec):   reduce dExpression --> bExpression
    action 'DO' (noprec):   reduce dExpression --> bExpression
    action 'OD' (noprec):   reduce dExpression --> bExpression
    action 'CONDITION' (noprec):   reduce dExpression --> bExpression
    action 'ELSE' (noprec):   reduce dExpression --> bExpression
    action 'EOF' (noprec):   reduce dExpression --> bExpression
    action 'NUM' (noprec):   reduce dExpression --> bExpression
    action 'VAR' (noprec):   reduce dExpression --> bExpression
    action 'error' (noprec):   reduce dExpression --> bExpression
    action '#' (noprec):   reduce dExpression --> bExpression
    action '$$' (noprec):   reduce dExpression --> bExpression
  immediate action: <none>  gotos:state 3:  items:    dExpression -> aExpression . 
    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression . 'EQUAL' aExpression
    bExpression -> aExpression . 'NEGEQUAL' aExpression
    bExpression -> aExpression . 'GT' aExpression
    bExpression -> aExpression . 'GTE' aExpression
    bExpression -> aExpression . 'LT' aExpression
    bExpression -> aExpression . 'LTE' aExpression
  actions:    action 'NOT' (noprec):   reduce dExpression --> aExpression
    action 'BIIMPLICATION' (noprec):   reduce dExpression --> aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   reduce dExpression --> aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   reduce dExpression --> aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   reduce dExpression --> aExpression
    action 'FALSE' (noprec):   reduce dExpression --> aExpression
    action 'SHORTAND' (noprec):   reduce dExpression --> aExpression
    action 'SHORTOR' (noprec):   reduce dExpression --> aExpression
    action 'AND' (noprec):   reduce dExpression --> aExpression
    action 'OR' (noprec):   reduce dExpression --> aExpression
    action 'NEG' (noprec):   reduce dExpression --> aExpression
    action 'EQUAL' (explicit left 9987):   shift 78
    action 'NEGEQUAL' (explicit left 9987):   shift 79
    action 'LT' (explicit left 9987):   shift 82
    action 'LTE' (explicit left 9987):   shift 83
    action 'GT' (explicit left 9987):   shift 80
    action 'GTE' (explicit left 9987):   shift 81
    action 'LPAR' (noprec):   reduce dExpression --> aExpression
    action 'RPAR' (noprec):   reduce dExpression --> aExpression
    action 'LCUR' (noprec):   reduce dExpression --> aExpression
    action 'RCUR' (noprec):   reduce dExpression --> aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (noprec):   reduce dExpression --> aExpression
    action 'ASSIGN' (noprec):   reduce dExpression --> aExpression
    action 'ASSIGNARRAY' (noprec):   reduce dExpression --> aExpression
    action 'SEQUENCE' (noprec):   reduce dExpression --> aExpression
    action 'SKIP' (noprec):   reduce dExpression --> aExpression
    action 'IF' (noprec):   reduce dExpression --> aExpression
    action 'FI' (noprec):   reduce dExpression --> aExpression
    action 'DO' (noprec):   reduce dExpression --> aExpression
    action 'OD' (noprec):   reduce dExpression --> aExpression
    action 'CONDITION' (noprec):   reduce dExpression --> aExpression
    action 'ELSE' (noprec):   reduce dExpression --> aExpression
    action 'EOF' (noprec):   reduce dExpression --> aExpression
    action 'NUM' (noprec):   reduce dExpression --> aExpression
    action 'VAR' (noprec):   reduce dExpression --> aExpression
    action 'error' (noprec):   reduce dExpression --> aExpression
    action '#' (noprec):   reduce dExpression --> aExpression
    action '$$' (noprec):   reduce dExpression --> aExpression
  immediate action: <none>  gotos:state 4:  items:    dExpression -> dExpression . 'COMMA' dExpression
    dExpression -> dExpression 'COMMA' dExpression . 
  actions:    action 'NOT' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'BIIMPLICATION' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'IMPLICATION' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'COMMA' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'MULTIPLY' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'DIVIDE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'ADDITION' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'SUBTRACT' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'ZERO' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'POWER' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'TRUE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'FALSE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'SHORTAND' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'SHORTOR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'AND' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'OR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'NEG' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'EQUAL' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'NEGEQUAL' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'LT' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'LTE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'GT' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'GTE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'LPAR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'RPAR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'LCUR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'RCUR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'LBRA' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'RBRA' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'ASSIGN' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'ASSIGNARRAY' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'SEQUENCE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'SKIP' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'IF' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'FI' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'DO' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'OD' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'CONDITION' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'ELSE' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'EOF' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'NUM' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'VAR' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action 'error' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action '#' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
    action '$$' (explicit left 9985):   reduce dExpression --> dExpression 'COMMA' dExpression
  immediate action: <none>  gotos:state 5:  items:    dExpression -> dExpression . 'COMMA' dExpression
    cExpression -> aExpression 'EQUAL' 'LCUR' dExpression . 'RCUR'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (explicit left 9985):   shift 7
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (explicit left 9986):   shift 18
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 6:  items:    dExpression -> dExpression . 'COMMA' dExpression
    cExpression -> aExpression 'ASSIGN' 'LBRA' dExpression . 'RBRA'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (explicit left 9985):   shift 7
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (explicit left 9996):   shift 24
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 7:  items:    dExpression -> dExpression 'COMMA' . dExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto dExpression: 4
    goto aExpression: 3
    goto bExpression: 2
state 8:  items:    gcExpression -> bExpression . 'CONDITION' bExpression
    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (explicit left 9994):   shift 75
    action 'SHORTOR' (explicit left 9993):   shift 76
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (explicit left 9986):   shift 9
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 9:  items:    gcExpression -> bExpression 'CONDITION' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 10
state 10:  items:    gcExpression -> bExpression 'CONDITION' bExpression . 
    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'COMMA' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'MULTIPLY' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'DIVIDE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'ADDITION' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'SUBTRACT' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'ZERO' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'POWER' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'TRUE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'FALSE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'SHORTAND' (explicit left 9994):   shift 75
    action 'SHORTOR' (explicit left 9993):   shift 76
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'EQUAL' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'NEGEQUAL' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'LT' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'LTE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'GT' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'GTE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'LPAR' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'RPAR' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'LCUR' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'RCUR' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'LBRA' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'RBRA' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'ASSIGN' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'ASSIGNARRAY' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'SEQUENCE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'SKIP' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'IF' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'FI' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'DO' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'OD' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'CONDITION' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'ELSE' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'EOF' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'NUM' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'VAR' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action 'error' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action '#' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
    action '$$' (explicit left 9986):   reduce gcExpression --> bExpression 'CONDITION' bExpression
  immediate action: <none>  gotos:state 11:  items:    gcExpression -> gcExpression . 'ELSE' gcExpression
    gcExpression -> gcExpression 'ELSE' gcExpression . 
  actions:    action 'NOT' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'BIIMPLICATION' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'IMPLICATION' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'COMMA' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'MULTIPLY' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'DIVIDE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'ADDITION' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'SUBTRACT' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'ZERO' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'POWER' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'TRUE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'FALSE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'SHORTAND' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'SHORTOR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'AND' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'OR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'NEG' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'EQUAL' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'NEGEQUAL' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'LT' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'LTE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'GT' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'GTE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'LPAR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'RPAR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'LCUR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'RCUR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'LBRA' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'RBRA' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'ASSIGN' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'ASSIGNARRAY' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'SEQUENCE' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'SKIP' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'IF' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'FI' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'DO' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'OD' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'CONDITION' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'ELSE' (explicit right 9988):   shift 14
    action 'EOF' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'NUM' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'VAR' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action 'error' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action '#' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
    action '$$' (explicit right 9988):   reduce gcExpression --> gcExpression 'ELSE' gcExpression
  immediate action: <none>  gotos:state 12:  items:    gcExpression -> gcExpression . 'ELSE' gcExpression
    cExpression -> 'IF' gcExpression . 'FI'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (explicit left 9986):   shift 29
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (explicit right 9988):   shift 14
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 13:  items:    gcExpression -> gcExpression . 'ELSE' gcExpression
    cExpression -> 'DO' gcExpression . 'OD'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (explicit left 9986):   shift 31
    action 'CONDITION' (noprec):   error
    action 'ELSE' (explicit right 9988):   shift 14
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 14:  items:    gcExpression -> gcExpression 'ELSE' . gcExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto gcExpression: 11
    goto aExpression: 43
    goto bExpression: 8
state 15:  items:    cExpression -> aExpression . 'EQUAL' 'LCUR' dExpression 'RCUR'
    cExpression -> aExpression . 'ASSIGN' 'LBRA' dExpression 'RBRA'
    cExpression -> aExpression . 'ASSIGN' aExpression
    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   error
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (explicit left 9987):   shift 16
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (explicit left 9986):   shift 22
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 16:  items:    cExpression -> aExpression 'EQUAL' . 'LCUR' dExpression 'RCUR'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (explicit left 9986):   shift 17
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 17:  items:    cExpression -> aExpression 'EQUAL' 'LCUR' . dExpression 'RCUR'
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto dExpression: 5
    goto aExpression: 3
    goto bExpression: 2
state 18:  items:    cExpression -> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR' . 
  actions:    action 'NOT' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'BIIMPLICATION' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'IMPLICATION' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'COMMA' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'MULTIPLY' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'DIVIDE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'ADDITION' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'SUBTRACT' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'ZERO' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'POWER' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'TRUE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'FALSE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'SHORTAND' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'SHORTOR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'AND' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'OR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'NEG' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'EQUAL' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'NEGEQUAL' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'LT' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'LTE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'GT' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'GTE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'LPAR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'RPAR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'LCUR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'RCUR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'LBRA' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'RBRA' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'ASSIGN' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'SEQUENCE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'SKIP' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'IF' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'FI' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'DO' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'OD' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'CONDITION' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'ELSE' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'EOF' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'NUM' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'VAR' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action 'error' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action '#' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
    action '$$' (explicit left 9986):   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'
  immediate action:   reduce cExpression --> aExpression 'EQUAL' 'LCUR' dExpression 'RCUR'  gotos:state 19:  items:    cExpression -> cExpression . 'COMMA' cExpression
    cExpression -> cExpression 'COMMA' cExpression . 
    cExpression -> cExpression . 'SEQUENCE' cExpression
  actions:    action 'NOT' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'BIIMPLICATION' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'IMPLICATION' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'COMMA' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'MULTIPLY' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'DIVIDE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'ADDITION' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'SUBTRACT' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'ZERO' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'POWER' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'TRUE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'FALSE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'SHORTAND' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'SHORTOR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'AND' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'OR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'NEG' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'EQUAL' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'NEGEQUAL' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'LT' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'LTE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'GT' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'GTE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'LPAR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'RPAR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'LCUR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'RCUR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'LBRA' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'RBRA' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'ASSIGN' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'ASSIGNARRAY' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'SEQUENCE' (explicit right 9988):   shift 27
    action 'SKIP' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'IF' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'FI' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'DO' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'OD' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'CONDITION' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'ELSE' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'EOF' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'NUM' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'VAR' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action 'error' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action '#' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
    action '$$' (explicit left 9985):   reduce cExpression --> cExpression 'COMMA' cExpression
  immediate action: <none>  gotos:state 20:  items:    cExpression -> cExpression . 'COMMA' cExpression
    cExpression -> cExpression . 'SEQUENCE' cExpression
    cExpression -> cExpression 'SEQUENCE' cExpression . 
  actions:    action 'NOT' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'BIIMPLICATION' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'IMPLICATION' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'COMMA' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'MULTIPLY' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'DIVIDE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'ADDITION' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'SUBTRACT' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'ZERO' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'POWER' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'TRUE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'FALSE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'SHORTAND' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'SHORTOR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'AND' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'OR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'NEG' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'EQUAL' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'NEGEQUAL' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'LT' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'LTE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'GT' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'GTE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'LPAR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'RPAR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'LCUR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'RCUR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'LBRA' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'RBRA' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'ASSIGN' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'ASSIGNARRAY' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'SEQUENCE' (explicit right 9988):   shift 27
    action 'SKIP' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'IF' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'FI' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'DO' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'OD' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'CONDITION' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'ELSE' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'EOF' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'NUM' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'VAR' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action 'error' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action '#' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
    action '$$' (explicit right 9988):   reduce cExpression --> cExpression 'SEQUENCE' cExpression
  immediate action: <none>  gotos:state 21:  items:    cExpression -> cExpression 'COMMA' . cExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (explicit left 9986):   shift 26
    action 'IF' (explicit left 9986):   shift 28
    action 'FI' (noprec):   error
    action 'DO' (explicit left 9986):   shift 30
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto cExpression: 19
    goto aExpression: 15
state 22:  items:    cExpression -> aExpression 'ASSIGN' . 'LBRA' dExpression 'RBRA'
    cExpression -> aExpression 'ASSIGN' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 23
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 25
state 23:  items:    cExpression -> aExpression 'ASSIGN' 'LBRA' . dExpression 'RBRA'
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto dExpression: 6
    goto aExpression: 3
    goto bExpression: 2
state 24:  items:    cExpression -> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA' . 
  actions:    action 'NOT' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'BIIMPLICATION' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'IMPLICATION' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'COMMA' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'MULTIPLY' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'DIVIDE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'ADDITION' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'SUBTRACT' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'ZERO' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'POWER' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'TRUE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'FALSE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'SHORTAND' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'SHORTOR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'AND' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'OR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'NEG' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'EQUAL' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'NEGEQUAL' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'LT' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'LTE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'GT' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'GTE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'LPAR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'RPAR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'LCUR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'RCUR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'LBRA' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'RBRA' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'ASSIGN' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'ASSIGNARRAY' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'SEQUENCE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'SKIP' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'IF' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'FI' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'DO' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'OD' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'CONDITION' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'ELSE' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'EOF' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'NUM' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'VAR' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action 'error' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action '#' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
    action '$$' (explicit left 9996):   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'
  immediate action:   reduce cExpression --> aExpression 'ASSIGN' 'LBRA' dExpression 'RBRA'  gotos:state 25:  items:    cExpression -> aExpression 'ASSIGN' aExpression . 
    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'BIIMPLICATION' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'FALSE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'SHORTAND' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'SHORTOR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'AND' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'OR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'NEG' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'EQUAL' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'NEGEQUAL' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'LT' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'LTE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'GT' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'GTE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'LPAR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'RPAR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'LCUR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'RCUR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'ASSIGN' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'ASSIGNARRAY' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'SEQUENCE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'SKIP' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'IF' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'FI' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'DO' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'OD' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'CONDITION' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'ELSE' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'EOF' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'NUM' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'VAR' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action 'error' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action '#' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
    action '$$' (explicit left 9986):   reduce cExpression --> aExpression 'ASSIGN' aExpression
  immediate action: <none>  gotos:state 26:  items:    cExpression -> 'SKIP' . 
  actions:    action 'NOT' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'BIIMPLICATION' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'IMPLICATION' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'COMMA' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'MULTIPLY' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'DIVIDE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'ADDITION' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'SUBTRACT' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'ZERO' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'POWER' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'TRUE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'FALSE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'SHORTAND' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'SHORTOR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'AND' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'OR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'NEG' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'EQUAL' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'NEGEQUAL' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'LT' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'LTE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'GT' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'GTE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'LPAR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'RPAR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'LCUR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'RCUR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'LBRA' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'RBRA' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'ASSIGN' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'SEQUENCE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'SKIP' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'IF' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'FI' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'DO' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'OD' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'CONDITION' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'ELSE' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'EOF' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'NUM' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'VAR' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action 'error' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action '#' (explicit left 9986):   reduce cExpression --> 'SKIP'
    action '$$' (explicit left 9986):   reduce cExpression --> 'SKIP'
  immediate action:   reduce cExpression --> 'SKIP'  gotos:state 27:  items:    cExpression -> cExpression 'SEQUENCE' . cExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (explicit left 9986):   shift 26
    action 'IF' (explicit left 9986):   shift 28
    action 'FI' (noprec):   error
    action 'DO' (explicit left 9986):   shift 30
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto cExpression: 20
    goto aExpression: 15
state 28:  items:    cExpression -> 'IF' . gcExpression 'FI'
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto gcExpression: 12
    goto aExpression: 43
    goto bExpression: 8
state 29:  items:    cExpression -> 'IF' gcExpression 'FI' . 
  actions:    action 'NOT' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'BIIMPLICATION' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'IMPLICATION' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'COMMA' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'MULTIPLY' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'DIVIDE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'ADDITION' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'SUBTRACT' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'ZERO' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'POWER' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'TRUE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'FALSE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'SHORTAND' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'SHORTOR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'AND' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'OR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'NEG' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'EQUAL' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'NEGEQUAL' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'LT' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'LTE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'GT' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'GTE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'LPAR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'RPAR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'LCUR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'RCUR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'LBRA' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'RBRA' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'ASSIGN' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'SEQUENCE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'SKIP' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'IF' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'FI' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'DO' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'OD' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'CONDITION' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'ELSE' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'EOF' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'NUM' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'VAR' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action 'error' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action '#' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
    action '$$' (explicit left 9986):   reduce cExpression --> 'IF' gcExpression 'FI'
  immediate action:   reduce cExpression --> 'IF' gcExpression 'FI'  gotos:state 30:  items:    cExpression -> 'DO' . gcExpression 'OD'
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto gcExpression: 13
    goto aExpression: 43
    goto bExpression: 8
state 31:  items:    cExpression -> 'DO' gcExpression 'OD' . 
  actions:    action 'NOT' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'BIIMPLICATION' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'IMPLICATION' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'COMMA' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'MULTIPLY' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'DIVIDE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'ADDITION' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'SUBTRACT' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'ZERO' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'POWER' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'TRUE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'FALSE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'SHORTAND' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'SHORTOR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'AND' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'OR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'NEG' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'EQUAL' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'NEGEQUAL' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'LT' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'LTE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'GT' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'GTE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'LPAR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'RPAR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'LCUR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'RCUR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'LBRA' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'RBRA' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'ASSIGN' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'SEQUENCE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'SKIP' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'IF' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'FI' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'DO' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'OD' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'CONDITION' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'ELSE' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'EOF' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'NUM' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'VAR' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action 'error' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action '#' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
    action '$$' (explicit left 9986):   reduce cExpression --> 'DO' gcExpression 'OD'
  immediate action:   reduce cExpression --> 'DO' gcExpression 'OD'  gotos:state 32:  items:    aExpression -> 'NUM' . 
  actions:    action 'NOT' (noprec):   reduce aExpression --> 'NUM'
    action 'BIIMPLICATION' (noprec):   reduce aExpression --> 'NUM'
    action 'IMPLICATION' (noprec):   reduce aExpression --> 'NUM'
    action 'COMMA' (noprec):   reduce aExpression --> 'NUM'
    action 'MULTIPLY' (noprec):   reduce aExpression --> 'NUM'
    action 'DIVIDE' (noprec):   reduce aExpression --> 'NUM'
    action 'ADDITION' (noprec):   reduce aExpression --> 'NUM'
    action 'SUBTRACT' (noprec):   reduce aExpression --> 'NUM'
    action 'ZERO' (noprec):   reduce aExpression --> 'NUM'
    action 'POWER' (noprec):   reduce aExpression --> 'NUM'
    action 'TRUE' (noprec):   reduce aExpression --> 'NUM'
    action 'FALSE' (noprec):   reduce aExpression --> 'NUM'
    action 'SHORTAND' (noprec):   reduce aExpression --> 'NUM'
    action 'SHORTOR' (noprec):   reduce aExpression --> 'NUM'
    action 'AND' (noprec):   reduce aExpression --> 'NUM'
    action 'OR' (noprec):   reduce aExpression --> 'NUM'
    action 'NEG' (noprec):   reduce aExpression --> 'NUM'
    action 'EQUAL' (noprec):   reduce aExpression --> 'NUM'
    action 'NEGEQUAL' (noprec):   reduce aExpression --> 'NUM'
    action 'LT' (noprec):   reduce aExpression --> 'NUM'
    action 'LTE' (noprec):   reduce aExpression --> 'NUM'
    action 'GT' (noprec):   reduce aExpression --> 'NUM'
    action 'GTE' (noprec):   reduce aExpression --> 'NUM'
    action 'LPAR' (noprec):   reduce aExpression --> 'NUM'
    action 'RPAR' (noprec):   reduce aExpression --> 'NUM'
    action 'LCUR' (noprec):   reduce aExpression --> 'NUM'
    action 'RCUR' (noprec):   reduce aExpression --> 'NUM'
    action 'LBRA' (noprec):   reduce aExpression --> 'NUM'
    action 'RBRA' (noprec):   reduce aExpression --> 'NUM'
    action 'ASSIGN' (noprec):   reduce aExpression --> 'NUM'
    action 'ASSIGNARRAY' (noprec):   reduce aExpression --> 'NUM'
    action 'SEQUENCE' (noprec):   reduce aExpression --> 'NUM'
    action 'SKIP' (noprec):   reduce aExpression --> 'NUM'
    action 'IF' (noprec):   reduce aExpression --> 'NUM'
    action 'FI' (noprec):   reduce aExpression --> 'NUM'
    action 'DO' (noprec):   reduce aExpression --> 'NUM'
    action 'OD' (noprec):   reduce aExpression --> 'NUM'
    action 'CONDITION' (noprec):   reduce aExpression --> 'NUM'
    action 'ELSE' (noprec):   reduce aExpression --> 'NUM'
    action 'EOF' (noprec):   reduce aExpression --> 'NUM'
    action 'NUM' (noprec):   reduce aExpression --> 'NUM'
    action 'VAR' (noprec):   reduce aExpression --> 'NUM'
    action 'error' (noprec):   reduce aExpression --> 'NUM'
    action '#' (noprec):   reduce aExpression --> 'NUM'
    action '$$' (noprec):   reduce aExpression --> 'NUM'
  immediate action:   reduce aExpression --> 'NUM'  gotos:state 33:  items:    aExpression -> 'VAR' . 
  actions:    action 'NOT' (noprec):   reduce aExpression --> 'VAR'
    action 'BIIMPLICATION' (noprec):   reduce aExpression --> 'VAR'
    action 'IMPLICATION' (noprec):   reduce aExpression --> 'VAR'
    action 'COMMA' (noprec):   reduce aExpression --> 'VAR'
    action 'MULTIPLY' (noprec):   reduce aExpression --> 'VAR'
    action 'DIVIDE' (noprec):   reduce aExpression --> 'VAR'
    action 'ADDITION' (noprec):   reduce aExpression --> 'VAR'
    action 'SUBTRACT' (noprec):   reduce aExpression --> 'VAR'
    action 'ZERO' (noprec):   reduce aExpression --> 'VAR'
    action 'POWER' (noprec):   reduce aExpression --> 'VAR'
    action 'TRUE' (noprec):   reduce aExpression --> 'VAR'
    action 'FALSE' (noprec):   reduce aExpression --> 'VAR'
    action 'SHORTAND' (noprec):   reduce aExpression --> 'VAR'
    action 'SHORTOR' (noprec):   reduce aExpression --> 'VAR'
    action 'AND' (noprec):   reduce aExpression --> 'VAR'
    action 'OR' (noprec):   reduce aExpression --> 'VAR'
    action 'NEG' (noprec):   reduce aExpression --> 'VAR'
    action 'EQUAL' (noprec):   reduce aExpression --> 'VAR'
    action 'NEGEQUAL' (noprec):   reduce aExpression --> 'VAR'
    action 'LT' (noprec):   reduce aExpression --> 'VAR'
    action 'LTE' (noprec):   reduce aExpression --> 'VAR'
    action 'GT' (noprec):   reduce aExpression --> 'VAR'
    action 'GTE' (noprec):   reduce aExpression --> 'VAR'
    action 'LPAR' (noprec):   reduce aExpression --> 'VAR'
    action 'RPAR' (noprec):   reduce aExpression --> 'VAR'
    action 'LCUR' (noprec):   reduce aExpression --> 'VAR'
    action 'RCUR' (noprec):   reduce aExpression --> 'VAR'
    action 'LBRA' (noprec):   reduce aExpression --> 'VAR'
    action 'RBRA' (noprec):   reduce aExpression --> 'VAR'
    action 'ASSIGN' (noprec):   reduce aExpression --> 'VAR'
    action 'ASSIGNARRAY' (noprec):   reduce aExpression --> 'VAR'
    action 'SEQUENCE' (noprec):   reduce aExpression --> 'VAR'
    action 'SKIP' (noprec):   reduce aExpression --> 'VAR'
    action 'IF' (noprec):   reduce aExpression --> 'VAR'
    action 'FI' (noprec):   reduce aExpression --> 'VAR'
    action 'DO' (noprec):   reduce aExpression --> 'VAR'
    action 'OD' (noprec):   reduce aExpression --> 'VAR'
    action 'CONDITION' (noprec):   reduce aExpression --> 'VAR'
    action 'ELSE' (noprec):   reduce aExpression --> 'VAR'
    action 'EOF' (noprec):   reduce aExpression --> 'VAR'
    action 'NUM' (noprec):   reduce aExpression --> 'VAR'
    action 'VAR' (noprec):   reduce aExpression --> 'VAR'
    action 'error' (noprec):   reduce aExpression --> 'VAR'
    action '#' (noprec):   reduce aExpression --> 'VAR'
    action '$$' (noprec):   reduce aExpression --> 'VAR'
  immediate action:   reduce aExpression --> 'VAR'  gotos:state 34:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression 'ADDITION' aExpression . 
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'BIIMPLICATION' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'FALSE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'SHORTAND' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'SHORTOR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'AND' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'OR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'NEG' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'EQUAL' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'NEGEQUAL' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'LT' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'LTE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'GT' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'GTE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'LPAR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'RPAR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'LCUR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'RCUR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'ASSIGN' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'ASSIGNARRAY' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'SEQUENCE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'SKIP' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'IF' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'FI' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'DO' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'OD' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'CONDITION' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'ELSE' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'EOF' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'NUM' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'VAR' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action 'error' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action '#' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
    action '$$' (explicit left 9989):   reduce aExpression --> aExpression 'ADDITION' aExpression
  immediate action: <none>  gotos:state 35:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression 'SUBTRACT' aExpression . 
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'BIIMPLICATION' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'MULTIPLY' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'DIVIDE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'ADDITION' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'SUBTRACT' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'ZERO' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'POWER' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'TRUE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'FALSE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'SHORTAND' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'SHORTOR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'AND' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'OR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'NEG' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'EQUAL' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'NEGEQUAL' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'LT' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'LTE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'GT' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'GTE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'LPAR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'RPAR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'LCUR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'RCUR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'ASSIGN' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'ASSIGNARRAY' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'SEQUENCE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'SKIP' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'IF' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'FI' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'DO' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'OD' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'CONDITION' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'ELSE' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'EOF' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'NUM' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'VAR' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action 'error' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action '#' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
    action '$$' (explicit left 9992):   reduce aExpression --> aExpression 'SUBTRACT' aExpression
  immediate action: <none>  gotos:state 36:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression 'MULTIPLY' aExpression . 
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'BIIMPLICATION' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'MULTIPLY' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'DIVIDE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'ADDITION' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'FALSE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'SHORTAND' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'SHORTOR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'AND' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'OR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'NEG' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'EQUAL' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'NEGEQUAL' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'LT' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'LTE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'GT' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'GTE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'LPAR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'RPAR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'LCUR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'RCUR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'ASSIGN' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'ASSIGNARRAY' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'SEQUENCE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'SKIP' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'IF' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'FI' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'DO' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'OD' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'CONDITION' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'ELSE' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'EOF' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'NUM' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'VAR' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action 'error' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action '#' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
    action '$$' (explicit left 9990):   reduce aExpression --> aExpression 'MULTIPLY' aExpression
  immediate action: <none>  gotos:state 37:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression 'DIVIDE' aExpression . 
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'BIIMPLICATION' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'MULTIPLY' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'DIVIDE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'ADDITION' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'FALSE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'SHORTAND' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'SHORTOR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'AND' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'OR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'NEG' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'EQUAL' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'NEGEQUAL' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'LT' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'LTE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'GT' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'GTE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'LPAR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'RPAR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'LCUR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'RCUR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'ASSIGN' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'ASSIGNARRAY' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'SEQUENCE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'SKIP' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'IF' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'FI' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'DO' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'OD' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'CONDITION' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'ELSE' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'EOF' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'NUM' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'VAR' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action 'error' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action '#' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
    action '$$' (explicit left 9990):   reduce aExpression --> aExpression 'DIVIDE' aExpression
  immediate action: <none>  gotos:state 38:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression 'POWER' aExpression . 
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'BIIMPLICATION' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'MULTIPLY' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'DIVIDE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'ADDITION' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'FALSE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'SHORTAND' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'SHORTOR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'AND' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'OR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'NEG' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'EQUAL' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'NEGEQUAL' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'LT' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'LTE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'GT' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'GTE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'LPAR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'RPAR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'LCUR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'RCUR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'ASSIGN' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'ASSIGNARRAY' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'SEQUENCE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'SKIP' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'IF' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'FI' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'DO' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'OD' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'CONDITION' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'ELSE' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'EOF' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'NUM' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'VAR' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action 'error' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action '#' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
    action '$$' (explicit right 9991):   reduce aExpression --> aExpression 'POWER' aExpression
  immediate action: <none>  gotos:state 39:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> 'LPAR' aExpression . 'RPAR'
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   error
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (explicit left 10000):   shift 57
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 40:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> 'LPAR' aExpression . 'RPAR'
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression . 'EQUAL' aExpression
    bExpression -> aExpression . 'NEGEQUAL' aExpression
    bExpression -> aExpression . 'GT' aExpression
    bExpression -> aExpression . 'GTE' aExpression
    bExpression -> aExpression . 'LT' aExpression
    bExpression -> aExpression . 'LTE' aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   error
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (explicit left 9987):   shift 78
    action 'NEGEQUAL' (explicit left 9987):   shift 79
    action 'LT' (explicit left 9987):   shift 82
    action 'LTE' (explicit left 9987):   shift 83
    action 'GT' (explicit left 9987):   shift 80
    action 'GTE' (explicit left 9987):   shift 81
    action 'LPAR' (noprec):   error
    action 'RPAR' (explicit left 10000):   shift 57
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 41:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression 'LBRA' aExpression . 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   error
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9996):   shift 59
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 42:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    aExpression -> aExpression 'IMPLICATION' aExpression . 
  actions:    action 'NOT' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'BIIMPLICATION' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'IMPLICATION' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'COMMA' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'MULTIPLY' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'DIVIDE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'ADDITION' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'SUBTRACT' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'ZERO' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'POWER' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'TRUE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'FALSE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'SHORTAND' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'SHORTOR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'AND' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'OR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'NEG' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'EQUAL' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'NEGEQUAL' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'LT' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'LTE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'GT' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'GTE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'LPAR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'RPAR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'LCUR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'RCUR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'LBRA' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'RBRA' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'ASSIGN' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'ASSIGNARRAY' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'SEQUENCE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'SKIP' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'IF' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'FI' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'DO' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'OD' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'CONDITION' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'ELSE' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'EOF' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'NUM' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'VAR' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action 'error' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action '#' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
    action '$$' (explicit left 9997):   reduce aExpression --> aExpression 'IMPLICATION' aExpression
  immediate action: <none>  gotos:state 43:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression . 'EQUAL' aExpression
    bExpression -> aExpression . 'NEGEQUAL' aExpression
    bExpression -> aExpression . 'GT' aExpression
    bExpression -> aExpression . 'GTE' aExpression
    bExpression -> aExpression . 'LT' aExpression
    bExpression -> aExpression . 'LTE' aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (noprec):   error
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (explicit left 9987):   shift 78
    action 'NEGEQUAL' (explicit left 9987):   shift 79
    action 'LT' (explicit left 9987):   shift 82
    action 'LTE' (explicit left 9987):   shift 83
    action 'GT' (explicit left 9987):   shift 80
    action 'GTE' (explicit left 9987):   shift 81
    action 'LPAR' (noprec):   error
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 44:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'EQUAL' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'EQUAL' aExpression
  immediate action: <none>  gotos:state 45:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'NEGEQUAL' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'NEGEQUAL' aExpression
  immediate action: <none>  gotos:state 46:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'GT' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'GT' aExpression
  immediate action: <none>  gotos:state 47:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'GTE' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'GTE' aExpression
  immediate action: <none>  gotos:state 48:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'LT' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'LT' aExpression
  immediate action: <none>  gotos:state 49:  items:    aExpression -> aExpression . 'ADDITION' aExpression
    aExpression -> aExpression . 'SUBTRACT' aExpression
    aExpression -> aExpression . 'MULTIPLY' aExpression
    aExpression -> aExpression . 'DIVIDE' aExpression
    aExpression -> aExpression . 'POWER' aExpression
    aExpression -> aExpression . 'LBRA' aExpression 'RBRA'
    aExpression -> aExpression . 'IMPLICATION' aExpression
    bExpression -> aExpression 'LTE' aExpression . 
  actions:    action 'NOT' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'BIIMPLICATION' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'IMPLICATION' (explicit left 9997):   shift 60
    action 'COMMA' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'MULTIPLY' (explicit left 9990):   shift 52
    action 'DIVIDE' (explicit left 9990):   shift 53
    action 'ADDITION' (explicit left 9989):   shift 50
    action 'SUBTRACT' (explicit left 9992):   shift 51
    action 'ZERO' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'POWER' (explicit right 9991):   shift 54
    action 'TRUE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'FALSE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'SHORTAND' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'SHORTOR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'AND' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'OR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'NEG' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'EQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'NEGEQUAL' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'LT' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'LTE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'GT' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'GTE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'LPAR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'RPAR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'LCUR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'RCUR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'LBRA' (explicit left 9996):   shift 58
    action 'RBRA' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'ASSIGN' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'ASSIGNARRAY' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'SEQUENCE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'SKIP' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'IF' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'FI' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'DO' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'OD' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'CONDITION' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'ELSE' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'EOF' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'NUM' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'VAR' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action 'error' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action '#' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
    action '$$' (explicit left 9987):   reduce bExpression --> aExpression 'LTE' aExpression
  immediate action: <none>  gotos:state 50:  items:    aExpression -> aExpression 'ADDITION' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 34
state 51:  items:    aExpression -> aExpression 'SUBTRACT' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 35
state 52:  items:    aExpression -> aExpression 'MULTIPLY' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 36
state 53:  items:    aExpression -> aExpression 'DIVIDE' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 37
state 54:  items:    aExpression -> aExpression 'POWER' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 38
state 55:  items:    aExpression -> 'LPAR' . aExpression 'RPAR'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 39
state 56:  items:    aExpression -> 'LPAR' . aExpression 'RPAR'
    bExpression -> 'LPAR' . bExpression 'RPAR'
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 40
    goto bExpression: 70
state 57:  items:    aExpression -> 'LPAR' aExpression 'RPAR' . 
  actions:    action 'NOT' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'BIIMPLICATION' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'IMPLICATION' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'COMMA' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'MULTIPLY' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'DIVIDE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'ADDITION' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'SUBTRACT' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'ZERO' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'POWER' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'TRUE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'FALSE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'SHORTAND' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'SHORTOR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'AND' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'OR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'NEG' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'EQUAL' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'NEGEQUAL' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'LT' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'LTE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'GT' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'GTE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'LPAR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'RPAR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'LCUR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'RCUR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'LBRA' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'RBRA' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'ASSIGN' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'ASSIGNARRAY' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'SEQUENCE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'SKIP' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'IF' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'FI' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'DO' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'OD' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'CONDITION' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'ELSE' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'EOF' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'NUM' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'VAR' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action 'error' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action '#' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
    action '$$' (explicit left 10000):   reduce aExpression --> 'LPAR' aExpression 'RPAR'
  immediate action:   reduce aExpression --> 'LPAR' aExpression 'RPAR'  gotos:state 58:  items:    aExpression -> aExpression 'LBRA' . aExpression 'RBRA'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 41
state 59:  items:    aExpression -> aExpression 'LBRA' aExpression 'RBRA' . 
  actions:    action 'NOT' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'BIIMPLICATION' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'IMPLICATION' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'COMMA' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'MULTIPLY' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'DIVIDE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'ADDITION' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'SUBTRACT' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'ZERO' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'POWER' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'TRUE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'FALSE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'SHORTAND' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'SHORTOR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'AND' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'OR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'NEG' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'EQUAL' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'NEGEQUAL' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'LT' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'LTE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'GT' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'GTE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'LPAR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'RPAR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'LCUR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'RCUR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'LBRA' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'RBRA' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'ASSIGN' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'ASSIGNARRAY' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'SEQUENCE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'SKIP' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'IF' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'FI' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'DO' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'OD' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'CONDITION' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'ELSE' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'EOF' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'NUM' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'VAR' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action 'error' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action '#' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
    action '$$' (explicit left 9996):   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'
  immediate action:   reduce aExpression --> aExpression 'LBRA' aExpression 'RBRA'  gotos:state 60:  items:    aExpression -> aExpression 'IMPLICATION' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 42
state 61:  items:    bExpression -> 'TRUE' . 
  actions:    action 'NOT' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'BIIMPLICATION' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'IMPLICATION' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'COMMA' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'MULTIPLY' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'DIVIDE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'ADDITION' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'SUBTRACT' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'ZERO' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'POWER' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'TRUE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'FALSE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'SHORTAND' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'SHORTOR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'AND' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'OR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'NEG' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'EQUAL' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'NEGEQUAL' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'LT' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'LTE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'GT' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'GTE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'LPAR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'RPAR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'LCUR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'RCUR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'LBRA' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'RBRA' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'ASSIGN' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'SEQUENCE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'SKIP' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'IF' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'FI' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'DO' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'OD' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'CONDITION' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'ELSE' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'EOF' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'NUM' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'VAR' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action 'error' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action '#' (explicit left 9986):   reduce bExpression --> 'TRUE'
    action '$$' (explicit left 9986):   reduce bExpression --> 'TRUE'
  immediate action:   reduce bExpression --> 'TRUE'  gotos:state 62:  items:    bExpression -> 'FALSE' . 
  actions:    action 'NOT' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'BIIMPLICATION' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'IMPLICATION' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'COMMA' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'MULTIPLY' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'DIVIDE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'ADDITION' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'SUBTRACT' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'ZERO' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'POWER' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'TRUE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'FALSE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'SHORTAND' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'SHORTOR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'AND' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'OR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'NEG' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'EQUAL' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'NEGEQUAL' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'LT' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'LTE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'GT' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'GTE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'LPAR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'RPAR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'LCUR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'RCUR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'LBRA' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'RBRA' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'ASSIGN' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'ASSIGNARRAY' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'SEQUENCE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'SKIP' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'IF' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'FI' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'DO' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'OD' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'CONDITION' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'ELSE' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'EOF' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'NUM' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'VAR' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action 'error' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action '#' (explicit left 9986):   reduce bExpression --> 'FALSE'
    action '$$' (explicit left 9986):   reduce bExpression --> 'FALSE'
  immediate action:   reduce bExpression --> 'FALSE'  gotos:state 63:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression 'BIIMPLICATION' bExpression . 
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'BIIMPLICATION' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'IMPLICATION' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'COMMA' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'MULTIPLY' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'DIVIDE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'ADDITION' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'SUBTRACT' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'ZERO' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'POWER' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'TRUE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'FALSE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'SHORTAND' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'SHORTOR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'EQUAL' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'NEGEQUAL' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'LT' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'LTE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'GT' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'GTE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'LPAR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'RPAR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'LCUR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'RCUR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'LBRA' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'RBRA' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'ASSIGN' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'ASSIGNARRAY' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'SEQUENCE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'SKIP' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'IF' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'FI' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'DO' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'OD' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'CONDITION' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'ELSE' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'EOF' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'NUM' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'VAR' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action 'error' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action '#' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
    action '$$' (explicit left 9997):   reduce bExpression --> bExpression 'BIIMPLICATION' bExpression
  immediate action: <none>  gotos:state 64:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> 'NOT' bExpression . 
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'BIIMPLICATION' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'IMPLICATION' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'COMMA' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'MULTIPLY' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'DIVIDE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'ADDITION' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'SUBTRACT' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'ZERO' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'POWER' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'TRUE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'FALSE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'SHORTAND' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'SHORTOR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'AND' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'OR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'NEG' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'EQUAL' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'NEGEQUAL' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'LT' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'LTE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'GT' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'GTE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'LPAR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'RPAR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'LCUR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'RCUR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'LBRA' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'RBRA' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'ASSIGN' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'ASSIGNARRAY' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'SEQUENCE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'SKIP' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'IF' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'FI' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'DO' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'OD' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'CONDITION' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'ELSE' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'EOF' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'NUM' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'VAR' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action 'error' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action '#' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
    action '$$' (explicit left 9999):   reduce bExpression --> 'NOT' bExpression
  immediate action: <none>  gotos:state 65:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression 'AND' bExpression . 
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'BIIMPLICATION' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'IMPLICATION' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'COMMA' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'MULTIPLY' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'DIVIDE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'ADDITION' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'SUBTRACT' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'ZERO' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'POWER' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'TRUE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'FALSE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'SHORTAND' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'SHORTOR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'AND' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'OR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'NEG' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'EQUAL' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'NEGEQUAL' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'LT' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'LTE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'GT' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'GTE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'LPAR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'RPAR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'LCUR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'RCUR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'LBRA' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'RBRA' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'ASSIGN' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'ASSIGNARRAY' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'SEQUENCE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'SKIP' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'IF' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'FI' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'DO' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'OD' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'CONDITION' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'ELSE' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'EOF' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'NUM' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'VAR' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action 'error' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action '#' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
    action '$$' (explicit left 9998):   reduce bExpression --> bExpression 'AND' bExpression
  immediate action: <none>  gotos:state 66:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression 'OR' bExpression . 
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'BIIMPLICATION' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'IMPLICATION' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'COMMA' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'MULTIPLY' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'DIVIDE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'ADDITION' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'SUBTRACT' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'ZERO' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'POWER' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'TRUE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'FALSE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'SHORTAND' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'SHORTOR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'AND' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'OR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'NEG' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'EQUAL' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'NEGEQUAL' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'LT' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'LTE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'GT' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'GTE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'LPAR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'RPAR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'LCUR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'RCUR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'LBRA' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'RBRA' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'ASSIGN' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'ASSIGNARRAY' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'SEQUENCE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'SKIP' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'IF' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'FI' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'DO' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'OD' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'CONDITION' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'ELSE' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'EOF' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'NUM' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'VAR' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action 'error' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action '#' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
    action '$$' (explicit left 9998):   reduce bExpression --> bExpression 'OR' bExpression
  immediate action: <none>  gotos:state 67:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression 'SHORTAND' bExpression . 
    bExpression -> bExpression . 'SHORTOR' bExpression
  actions:    action 'NOT' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'COMMA' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'MULTIPLY' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'DIVIDE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'ADDITION' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'SUBTRACT' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'ZERO' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'POWER' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'TRUE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'FALSE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'SHORTAND' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'SHORTOR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'EQUAL' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'NEGEQUAL' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'LT' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'LTE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'GT' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'GTE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'LPAR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'RPAR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'LCUR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'RCUR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'LBRA' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'RBRA' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'ASSIGN' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'ASSIGNARRAY' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'SEQUENCE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'SKIP' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'IF' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'FI' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'DO' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'OD' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'CONDITION' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'ELSE' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'EOF' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'NUM' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'VAR' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action 'error' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action '#' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
    action '$$' (explicit left 9994):   reduce bExpression --> bExpression 'SHORTAND' bExpression
  immediate action: <none>  gotos:state 68:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
    bExpression -> bExpression 'SHORTOR' bExpression . 
  actions:    action 'NOT' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'COMMA' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'MULTIPLY' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'DIVIDE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'ADDITION' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'SUBTRACT' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'ZERO' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'POWER' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'TRUE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'FALSE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'SHORTAND' (explicit left 9994):   shift 75
    action 'SHORTOR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'EQUAL' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'NEGEQUAL' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'LT' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'LTE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'GT' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'GTE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'LPAR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'RPAR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'LCUR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'RCUR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'LBRA' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'RBRA' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'ASSIGN' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'ASSIGNARRAY' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'SEQUENCE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'SKIP' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'IF' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'FI' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'DO' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'OD' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'CONDITION' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'ELSE' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'EOF' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'NUM' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'VAR' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action 'error' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action '#' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
    action '$$' (explicit left 9993):   reduce bExpression --> bExpression 'SHORTOR' bExpression
  immediate action: <none>  gotos:state 69:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
    bExpression -> 'NEG' bExpression . 
  actions:    action 'NOT' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'COMMA' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'MULTIPLY' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'DIVIDE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'ADDITION' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'SUBTRACT' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'ZERO' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'POWER' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'TRUE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'FALSE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'SHORTAND' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'SHORTOR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'EQUAL' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'NEGEQUAL' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'LT' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'LTE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'GT' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'GTE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'LPAR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'RPAR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'LCUR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'RCUR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'LBRA' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'RBRA' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'ASSIGN' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'ASSIGNARRAY' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'SEQUENCE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'SKIP' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'IF' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'FI' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'DO' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'OD' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'CONDITION' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'ELSE' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'EOF' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'NUM' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'VAR' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action 'error' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action '#' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
    action '$$' (explicit left 9995):   reduce bExpression --> 'NEG' bExpression
  immediate action: <none>  gotos:state 70:  items:    bExpression -> bExpression . 'BIIMPLICATION' bExpression
    bExpression -> bExpression . 'AND' bExpression
    bExpression -> bExpression . 'OR' bExpression
    bExpression -> bExpression . 'SHORTAND' bExpression
    bExpression -> bExpression . 'SHORTOR' bExpression
    bExpression -> 'LPAR' bExpression . 'RPAR'
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (explicit left 9997):   shift 71
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (explicit left 9994):   shift 75
    action 'SHORTOR' (explicit left 9993):   shift 76
    action 'AND' (explicit left 9998):   shift 73
    action 'OR' (explicit left 9998):   shift 74
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (noprec):   error
    action 'RPAR' (explicit left 10000):   shift 84
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   error
    action 'VAR' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 71:  items:    bExpression -> bExpression 'BIIMPLICATION' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 63
state 72:  items:    bExpression -> 'NOT' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 64
state 73:  items:    bExpression -> bExpression 'AND' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 65
state 74:  items:    bExpression -> bExpression 'OR' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 66
state 75:  items:    bExpression -> bExpression 'SHORTAND' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 67
state 76:  items:    bExpression -> bExpression 'SHORTOR' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 68
state 77:  items:    bExpression -> 'NEG' . bExpression
  actions:    action 'NOT' (explicit left 9999):   shift 72
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (explicit left 9986):   shift 61
    action 'FALSE' (explicit left 9986):   shift 62
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (explicit left 9995):   shift 77
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 56
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 43
    goto bExpression: 69
state 78:  items:    bExpression -> aExpression 'EQUAL' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 44
state 79:  items:    bExpression -> aExpression 'NEGEQUAL' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 45
state 80:  items:    bExpression -> aExpression 'GT' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 46
state 81:  items:    bExpression -> aExpression 'GTE' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 47
state 82:  items:    bExpression -> aExpression 'LT' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 48
state 83:  items:    bExpression -> aExpression 'LTE' . aExpression
  actions:    action 'NOT' (noprec):   error
    action 'BIIMPLICATION' (noprec):   error
    action 'IMPLICATION' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'MULTIPLY' (noprec):   error
    action 'DIVIDE' (noprec):   error
    action 'ADDITION' (noprec):   error
    action 'SUBTRACT' (noprec):   error
    action 'ZERO' (noprec):   error
    action 'POWER' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'SHORTAND' (noprec):   error
    action 'SHORTOR' (noprec):   error
    action 'AND' (noprec):   error
    action 'OR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'EQUAL' (noprec):   error
    action 'NEGEQUAL' (noprec):   error
    action 'LT' (noprec):   error
    action 'LTE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GTE' (noprec):   error
    action 'LPAR' (explicit left 10000):   shift 55
    action 'RPAR' (noprec):   error
    action 'LCUR' (noprec):   error
    action 'RCUR' (noprec):   error
    action 'LBRA' (noprec):   error
    action 'RBRA' (noprec):   error
    action 'ASSIGN' (noprec):   error
    action 'ASSIGNARRAY' (noprec):   error
    action 'SEQUENCE' (noprec):   error
    action 'SKIP' (noprec):   error
    action 'IF' (noprec):   error
    action 'FI' (noprec):   error
    action 'DO' (noprec):   error
    action 'OD' (noprec):   error
    action 'CONDITION' (noprec):   error
    action 'ELSE' (noprec):   error
    action 'EOF' (noprec):   error
    action 'NUM' (noprec):   shift 32
    action 'VAR' (noprec):   shift 33
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto aExpression: 49
state 84:  items:    bExpression -> 'LPAR' bExpression 'RPAR' . 
  actions:    action 'NOT' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'BIIMPLICATION' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'IMPLICATION' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'COMMA' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'MULTIPLY' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'DIVIDE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'ADDITION' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'SUBTRACT' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'ZERO' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'POWER' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'TRUE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'FALSE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'SHORTAND' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'SHORTOR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'AND' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'OR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'NEG' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'EQUAL' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'NEGEQUAL' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'LT' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'LTE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'GT' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'GTE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'LPAR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'RPAR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'LCUR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'RCUR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'LBRA' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'RBRA' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'ASSIGN' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'ASSIGNARRAY' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'SEQUENCE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'SKIP' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'IF' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'FI' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'DO' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'OD' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'CONDITION' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'ELSE' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'EOF' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'NUM' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'VAR' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action 'error' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action '#' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
    action '$$' (explicit left 10000):   reduce bExpression --> 'LPAR' bExpression 'RPAR'
  immediate action:   reduce bExpression --> 'LPAR' bExpression 'RPAR'  gotos:
startStates = 0
------------------------
