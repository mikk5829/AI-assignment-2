        Output file describing compiled parser placed in SecurityAnalysisParser.fs and SecurityAnalysisParser.fsi
------------------------
states = 
state 0:  items:    _startinit_Sec_C_Expression ->  . init_Sec_C_Expression
  actions:    action 'ASSIGN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'EOF' (noprec):   error
    action 'STRING' (noprec):   shift 2
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto init_Sec_C_Expression: 1
state 1:  items:    _startinit_Sec_C_Expression -> init_Sec_C_Expression . 
    init_Sec_C_Expression -> init_Sec_C_Expression . 'COMMA' init_Sec_C_Expression
  actions:    action 'ASSIGN' (noprec):   accept
    action 'COMMA' (explicit right 10000):   shift 6
    action 'EOF' (noprec):   accept
    action 'STRING' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action: <none>  gotos:state 2:  items:    init_Sec_C_Expression -> 'STRING' . 'ASSIGN' 'STRING'
  actions:    action 'ASSIGN' (explicit left 9999):   shift 3
    action 'COMMA' (noprec):   error
    action 'EOF' (noprec):   error
    action 'STRING' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 3:  items:    init_Sec_C_Expression -> 'STRING' 'ASSIGN' . 'STRING'
  actions:    action 'ASSIGN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'EOF' (noprec):   error
    action 'STRING' (noprec):   shift 4
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 4:  items:    init_Sec_C_Expression -> 'STRING' 'ASSIGN' 'STRING' . 
  actions:    action 'ASSIGN' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action 'COMMA' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action 'EOF' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action 'STRING' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action 'error' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action '#' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
    action '$$' (noprec):   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'
  immediate action:   reduce init_Sec_C_Expression --> 'STRING' 'ASSIGN' 'STRING'  gotos:state 5:  items:    init_Sec_C_Expression -> init_Sec_C_Expression . 'COMMA' init_Sec_C_Expression
    init_Sec_C_Expression -> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression . 
  actions:    action 'ASSIGN' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
    action 'COMMA' (explicit right 10000):   shift 6
    action 'EOF' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
    action 'STRING' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
    action 'error' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
    action '#' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
    action '$$' (explicit right 10000):   reduce init_Sec_C_Expression --> init_Sec_C_Expression 'COMMA' init_Sec_C_Expression
  immediate action: <none>  gotos:state 6:  items:    init_Sec_C_Expression -> init_Sec_C_Expression 'COMMA' . init_Sec_C_Expression
  actions:    action 'ASSIGN' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'EOF' (noprec):   error
    action 'STRING' (noprec):   shift 2
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto init_Sec_C_Expression: 5

startStates = 0
------------------------
